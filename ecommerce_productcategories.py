# -*- coding: utf-8 -*-
"""Ecommerce-ProductCategories.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17__HoKRBpzk8jaxjxtsiNGmaGLrM5C21
"""

!pip install datasets
!pip install scikit-learn
!pip install ibm-watson-machine-learning==1.0.312

!pip install numpy==1.23.5 pandas==1.5.3 --force-reinstall

import os,getpass
from pandas import read_csv

credentials = {
    "url": "https://us-south.ml.cloud.ibm.com",
    "apikey": getpass.getpass("Please enter your WML api key (hit enter): ")
}

try:
    project_id = os.environ["PROJECT_ID"]
except KeyError:
    project_id = input("Please enter your project_id (hit enter): ")

# [8]
project_id

project_id

!sudo apt-get update -y
!sudo apt-get install python3.10 python3.10-distutils -y
!sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1
!sudo apt-get install python3-pip -y

!pip install --upgrade pip setuptools
!pip install botocore==1.31.30 s3transfer==0.6.0 ibm-cos-sdk-core==2.14.1 ibm-cos-sdk-s3transfer==2.14.1 ibm-cos-sdk==2.14.1

import os,types
import pandas as pd
import ibm_boto3
from ibm_botocore.client import Config  # NOTE: this must come from ibm_botocore, not botocore

cos_client = ibm_boto3.client(service_name='s3',
    ibm_api_key_id='OIjwM_u3szSaVKXL6xy3RtMn_LRlJ8-v9kv-drgCQRgF',
    ibm_auth_endpoint="https://iam.cloud.ibm.com/oidc/token",
    config=Config(signature_version='oauth'),
    endpoint_url='https://s3.us-south.cloud-object-storage.appdomain.cloud'
)
def iter(self): return 0
bucket = 'e-commerce-bucket-cjfdv2ir5jkzapd'
object_key = 'ecommerce_reviews_train (1).csv'

body = cos_client.get_object(Bucket=bucket, Key=object_key)['Body']

# Add missing iter method so pandas accepts body as file-like object
if not hasattr(body, "iter"): body.iter = types.MethodType(iter, body)
#
train_data = pd.read_csv(body)
train_data.head(5)

import os,types
import pandas as pd
import ibm_boto3
from ibm_botocore.client import Config  # NOTE: this must come from ibm_botocore, not botocore

cos_client = ibm_boto3.client(service_name='s3',
    ibm_api_key_id='OIjwM_u3szSaVKXL6xy3RtMn_LRlJ8-v9kv-drgCQRgF',
    ibm_auth_endpoint="https://iam.cloud.ibm.com/oidc/token",
    config=Config(signature_version='oauth'),
    endpoint_url='https://s3.us-south.cloud-object-storage.appdomain.cloud'
)
def iter(self): return 0
bucket = 'e-commerce-bucket-cjfdv2ir5jkzapd'
object_key = 'ecommerce_reviews_test (1).csv'

body = cos_client.get_object(Bucket=bucket, Key=object_key)['Body']

# Add missing iter method so pandas accepts body as file-like object
if not hasattr(body, "iter"): body.iter = types.MethodType(iter, body)

test_data = pd.read_csv(body)
test_data.head(5)

train_data.shape

test_data.shape

!pip install ibm-watson-machine-learning

from ibm_watson_machine_learning.foundation_models.utils.enums import ModelTypes

model_id = ModelTypes.FLAN_UL2

product_category_instruction = """
Classify the product category of the following customer review.
Choose from: Electronics, Clothing, Home Appliances.

review: I bought a new refrigerator and it's working great!
category: Home Appliances

review: The fabric of the shirt is very comfortable and fits well.
category: Clothing

review: The sound quality of these headphones is amazing.
category: Electronics

Now classify the following review:
"""

from ibm_watson_machine_learning.metanames import GenTextParamsMetaNames as GenParams

parameters = {
    GenParams.MAX_NEW_TOKENS: 10
}

from ibm_watson_machine_learning.foundation_models import Model

model = Model(
    model_id=model_id,
    params=parameters,
    credentials=credentials,
    project_id=project_id
)

print(test_data.columns)

import time

results = []
comments = list(test_data.Review)

for comment in comments:
    prompt = f"{product_category_instruction }\n\ncomment: {comment}\nsentiment:"
    response = model.generate_text(prompt=prompt)
    results.append(response.strip())
    time.sleep(0.6)  # ‚è≥ Wait for 600ms between requests

comments

test_data['Predicted_Sentiment'] = results

test_data.head()